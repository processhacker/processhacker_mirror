<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAi
        BwAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AJwADBwEKAwUBBzAAAyoBQQMGAQgYAAMGAQgDKgFBnAADBwEKATABgwE2
        Af8BMgFnATIB+wMFAQcoAAMqAUEBSAFFAfIB/wJAAdkB/QMGAQgQAAMGAQgBKwEpAcgB/AEqASgB6gH/
        AyoBQZQAAwcBCgE5AY4BQAH/AU0BowFVAf8BSAGfAVAB/wEyAXwBOAH+AwYBCCAAAyoBQQFRAU8B9QH/
        AVwBWgH6Af8BUQFOAfYB/wE6ATkBzgH8AwYBCAgAAwYBCAIrAcoB/AE6ATgB8QH/AUUBQwH2Af8BKgEo
        AeoB/wMqAUGMAAMHAQoBQgGaAUoB/wFUAawBXQH/AXABygGCAf8BbQHIAXcB/wFKAaABUgH/ATMBfQE5
        Af4DBgEIHAADHgErAVQBUQH2Af8BXgFbAfoB/wFqAWkC/wFSAU8B9gH/AToBOQHOAfwDBgEIAwYBCAEv
        ASwBywH8AUABPgHyAf8BXAFbAv8BQwFBAfQB/wEoASYB6QH/Ax4BK4gAAwcBCgFKAaYBUwH/AVwBtQFm
        Af8BdwHOAYkB/wF0AcwBhwH/AW8BygGBAf8BbwHJAYEB/wFLAaIBUwH/ATQBfgE6Af4DBgEIHAADHgEr
        AVQBUgH2Af8BXwFcAfoB/wFtAWoC/wFTAVEB9gH/ATsBOgHOAfwCQAHYAf0BSQFGAfQB/wFhAWAC/wFJ
        AUcB9QH/AS8BLQHrAf8DHgEriAADBwEJAVIBsAFcAf8BZAG9AW8B/wGEAdIBkAH/AXMByQGFAf8BWQGy
        AWMB/wFcAbQBZgH/AXEByQGDAf8BcQHLAYIB/wFMAaMBVQH/ATsBcwFAAf0DBgEIHAADHgErAVUBUwH2
        Af8BYAFdAfoB/wFtAWsC/wFsAWkC/wFpAWcC/wFnAWUC/wFQAU4B9wH/ATgBNgHuAf8DHgErjAADLQFG
        AVoBcAFhAeQBcgHJAYYB/wGAAc4BjQH/AUQBkgFRAfwDQAFvA0oBiwFVAa0BYAH/AXUBzAGGAf8BcgHL
        AYUB/wFNAaQBVgH/AS8BeAE1AfwDBgEIHAADHgErAVYBVAH3Af8BcgFvAv8BUgFPAv8BUAFNAv8BawFp
        Av8BQQE/AfAB/wMeASuUAAMoATwBYQF4AWEB5gFmAcABcgH/A0ABbwgAAUwCTQGRAVcBrgFhAf8BdgHN
        AYkB/wF1Ac0BhwH/AU8BpQFYAf8BMAF5ATYB/AMGAQgYAAMGAQgBUgFRAeIB/QF2AXIC/wFXAVQC/wFU
        AVEC/wFvAW0C/wJAAdsB/QMGAQiYAAMsAUMDOwFlEAABTAJNAZEBWAGvAWIB/wF4Ac4BigH/AXcBzgGJ
        Af8BUAGmAVkB/wExAXkBNwH8AwYBCBAAAwYBCAFfAVwB1wH8AWkBZgH7Af8BgAF3Av8BdwF0Av8BdQFy
        Av8BcgFwAv8BVwFVAfcB/wE9ATsBzwH8AwYBCLAAAUwCTQGRAVkBsAFjAf8BgQHPAY0B/wF4Ac8BiwH/
        AVEBpwFaAf8BMgGFATkB/wMGAQgIAAMGAQgBZwFkAdoB/AFwAW0B/QH/AYYBggL/AW8BbAH8Af8BXQFb
        AfgB/wFZAVYB9wH/AWYBYwH6Af8BdAFyAv8BWQFWAfcB/wE9ATwBzwH8AwYBCLAAAUwCTQGRAVsBsgFl
        Af8BggHRAY8B/wFzAcgBhQH/AVABpgFZAf8DRAF7BAADBgEIAWcBZAHqAf0BdgFzAf4B/wGKAYcC/wF1
        AXIB/QH/AWUBYgH7Af8DHgErAx4BKwFaAVcB+AH/AWcBZQH6Af8BdgFzAv8BWgFYAfcB/wE+ATwB0AH8
        AwQBBbAAA00BkQFcAbMBZgH/AVgBrwFiAf8DRAF5CAADFgEfAXMBcAL/AYEBdwL/AYEBdwH+Af8BbQFq
        Af0B/wMeASsIAAMeASsBWwFYAfgB/wFoAWYB+wH/AXcBdQL/AVsBWAH4Af8DQAFvAwEBArAAA00BkQNG
        AX8QAAMWAR8BcwFwAv8BcgFvAf4B/wMeASsQAAMeASsBXQFaAfgB/wFjAWEB+QH/AVMBUgFTAagDHQEp
        0AADFgEfAx4BKxgAAx4BKwNAAW8DKQE++AADBwEKjAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEA
        AQEFAAGAFwAD/wEABP8EAAH5Af8C5wQAAfAB/wLDBAAB4AF/AoEEAAHAAT8BgAEBBAABgAEfAcABAwUA
        AQ8B4AEHBQABBwHwAQ8EAAGGAQMB8AEPBAABzwEBAeABBwQAAf8BgAHAAQMEAAH/AcABgAEBBAAB/wHh
        AYEBgAQAAf8B8wHDAcEEAAL/AecB4wQAA/8B9wQACw==
</value>
  </data>
</root>